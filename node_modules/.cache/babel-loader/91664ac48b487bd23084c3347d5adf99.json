{"ast":null,"code":"\"use strict\";\n\nimport { NativeModules, Platform } from \"react-native\";\nconst {\n  RNNetworkInfo\n} = NativeModules;\nconst NetworkInfo = {\n  async getSSID() {\n    return await RNNetworkInfo.getSSID();\n  },\n\n  async getBSSID() {\n    return await RNNetworkInfo.getBSSID();\n  },\n\n  async getBroadcast() {\n    return await RNNetworkInfo.getBroadcast();\n  },\n\n  async getIPAddress() {\n    return await RNNetworkInfo.getIPAddress();\n  },\n\n  async getIPV4Address() {\n    const wifiIP = await RNNetworkInfo.getWIFIIPV4Address();\n\n    if (wifiIP && wifiIP !== '0.0.0.0') {\n      return wifiIP;\n    }\n\n    return await RNNetworkInfo.getIPV4Address();\n  },\n\n  async getGatewayIPAddress() {\n    return await RNNetworkInfo.getGatewayIPAddress();\n  },\n\n  async getSubnet() {\n    return await RNNetworkInfo.getSubnet();\n  },\n\n  async getFrequency() {\n    if (Platform.OS !== 'android') {\n      return null;\n    }\n\n    return await RNNetworkInfo.getFrequency();\n  }\n\n};\nmodule.exports = {\n  NetworkInfo\n};","map":{"version":3,"sources":["/Users/alexyang/Desktop/todolist/Traffic-Yeeter/node_modules/react-native-network-info/NetworkInfo.js"],"names":["NativeModules","Platform","RNNetworkInfo","NetworkInfo","getSSID","getBSSID","getBroadcast","getIPAddress","getIPV4Address","wifiIP","getWIFIIPV4Address","getGatewayIPAddress","getSubnet","getFrequency","OS","module","exports"],"mappings":"AAAA;;AAEA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,cAAxC;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAoBF,aAA1B;AAEA,MAAMG,WAAW,GAAG;AAClB,QAAMC,OAAN,GAAgB;AACd,WAAO,MAAMF,aAAa,CAACE,OAAd,EAAb;AACD,GAHiB;;AAKlB,QAAMC,QAAN,GAAiB;AACf,WAAO,MAAMH,aAAa,CAACG,QAAd,EAAb;AACD,GAPiB;;AASlB,QAAMC,YAAN,GAAqB;AACnB,WAAO,MAAMJ,aAAa,CAACI,YAAd,EAAb;AACD,GAXiB;;AAalB,QAAMC,YAAN,GAAqB;AACnB,WAAO,MAAML,aAAa,CAACK,YAAd,EAAb;AACD,GAfiB;;AAiBlB,QAAMC,cAAN,GAAuB;AACrB,UAAMC,MAAM,GAAG,MAAMP,aAAa,CAACQ,kBAAd,EAArB;;AACA,QAAID,MAAM,IAAIA,MAAM,KAAK,SAAzB,EAAoC;AAClC,aAAOA,MAAP;AACD;;AAED,WAAO,MAAMP,aAAa,CAACM,cAAd,EAAb;AACD,GAxBiB;;AA0BlB,QAAMG,mBAAN,GAA4B;AAC1B,WAAO,MAAMT,aAAa,CAACS,mBAAd,EAAb;AACD,GA5BiB;;AA8BlB,QAAMC,SAAN,GAAkB;AAChB,WAAO,MAAMV,aAAa,CAACU,SAAd,EAAb;AACD,GAhCiB;;AAkClB,QAAMC,YAAN,GAAqB;AACnB,QAAIZ,QAAQ,CAACa,EAAT,KAAgB,SAApB,EAA+B;AAC7B,aAAO,IAAP;AACD;;AACD,WAAO,MAAMZ,aAAa,CAACW,YAAd,EAAb;AACD;;AAvCiB,CAApB;AA0CAE,MAAM,CAACC,OAAP,GAAiB;AAAEb,EAAAA;AAAF,CAAjB","sourcesContent":["\"use strict\";\n\nimport { NativeModules, Platform } from \"react-native\";\nconst { RNNetworkInfo } = NativeModules;\n\nconst NetworkInfo = {\n  async getSSID() {\n    return await RNNetworkInfo.getSSID();\n  },\n\n  async getBSSID() {\n    return await RNNetworkInfo.getBSSID();\n  },\n\n  async getBroadcast() {\n    return await RNNetworkInfo.getBroadcast();\n  },\n\n  async getIPAddress() {\n    return await RNNetworkInfo.getIPAddress();\n  },\n\n  async getIPV4Address() {\n    const wifiIP = await RNNetworkInfo.getWIFIIPV4Address();\n    if (wifiIP && wifiIP !== '0.0.0.0') {\n      return wifiIP;\n    }\n    \n    return await RNNetworkInfo.getIPV4Address();\n  },\n\n  async getGatewayIPAddress() {\n    return await RNNetworkInfo.getGatewayIPAddress();\n  },\n\n  async getSubnet() {\n    return await RNNetworkInfo.getSubnet();\n  },\n\n  async getFrequency() {\n    if (Platform.OS !== 'android') {\n      return null;\n    }\n    return await RNNetworkInfo.getFrequency();\n  }\n};\n\nmodule.exports = { NetworkInfo };\n"]},"metadata":{},"sourceType":"module"}